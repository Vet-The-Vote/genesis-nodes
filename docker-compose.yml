version: '3.8'

services:

  bios:
    build:
      target: local-stage
      context: ./
      dockerfile: ./Dockerfile
    container_name: bios
    environment:
      EOS_PUB_KEY: EOS7XHH6htVrHa9uQSNdhj1JbJ5RzURACEMXdxmV2Cbk4E8NGhWQ7
      EOS_PRIV_KEY: # TODO: add private key using Docker secrets
    volumes:
      - ./services/bios:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
#    depends_on:
#      - "vault"
#      - "wallet"

  validator1:
    build:
      target: local-stage
      context: ./
      dockerfile: ./Dockerfile
    container_name: validator1
    environment:
      EOS_PUB_KEY: EOS6B6E89uA9gwBGB7Mfj5dfabSjuYkJEXosusYDQo6rfucS8tzWp
      EOS_PRIV_KEY: # TODO: add private key using Docker secrets
    volumes:
      - ./services/validator1:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
    #entrypoint: ["sh", "-c", "while true; do echo 42; sleep 5; done"]
    #command: ["./wait-for-it.sh", "db:5432", "--", "python", "app.py"]

  validator2:
    build:
      target: local-stage
      context: ./
      dockerfile: ./Dockerfile
    container_name: validator2
    environment:
      EOS_PUB_KEY: EOS6vbnmkDHHaYBLVDzRtVYPuHEtASpQ2mmuteV8Ji2E6LyTg2Fuf
      EOS_PRIV_KEY: # TODO: add private key using Docker secrets
    volumes:
      - ./services/validator2:/opt/application
    image: ${IMAGE_NAME}:${VERSION}

  validator3:
    build:
      target: local-stage
      context: ./
      dockerfile: ./Dockerfile
    container_name: validator3
    environment:
      EOS_PUB_KEY: EOS8BjV7ypK5LV9qB48smbqARYFEyb5KrkX9fV3voCJMB4rft5ntz
      EOS_PRIV_KEY: # TODO: add private key using Docker secrets
    volumes:
      - ./services/validator3:/opt/application
    image: ${IMAGE_NAME}:${VERSION}

  seed:
    build:
      target: local-stage
      context: ./
      dockerfile: ./Dockerfile
    container_name: seed
    volumes:
      - ./services/seed:/opt/application
    image: ${IMAGE_NAME}:${VERSION}

  api-node:
    build:
      target: local-stage
      context: ./
      dockerfile: ./Dockerfile
    container_name: api-node
    volumes:
      - ./services/api-node:/opt/application
    image: ${IMAGE_NAME}:${VERSION}
#    ports:
#      - 80:80

#  wallet:
#    build:
#      target: local-stage
#      context: ./
#      dockerfile: ./Dockerfile
#    container_name: wallet
#    volumes:
#      - ./services/wallet:/opt/application
#    image: ${IMAGE_NAME}:${VERSION}
#    depends_on:
#      - "vault"
#
#  vault:
#    image: vault:1.4.3
#    ports:
#      - "8200:8200"
#    container_name: vault
#    volumes:
#      - /tmp/vault/file:/vault/file:rw
#      - ./services/vault/config:/vault/config:rw
#    cap_add:
#      - IPC_LOCK
#    entrypoint: vault server -config=/vault/config/vault.json
#    environment:
#      VAULT_API_ADDR: http://0.0.0.0:8200/
#      # VAULT_LOCAL_CONFIG: ${VAULT_LOCAL_CONFIG}
#      # VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
#      # VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
